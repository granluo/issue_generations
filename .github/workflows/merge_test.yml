name: test_coverage

on:
  pull_request:
    types: [opened, synchronize, closed]

jobs:
  check:
    if: github.repository == 'granluo/issue_generations' && github.event.action == 'synchronize'
    name: Check changed files
    outputs:
      database_run_job: ${{ steps.check_files.outputs.database_run_job }}
      functions_run_job: ${{ steps.check_files.outputs.functions_run_job }}
      base_commit: ${{ steps.check_files.outputs.base_commit }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: check files
        id: check_files
        env:
          pr_branch: "pr_branch"
        run: |
          echo "::set-output name=database_run_job::true"
          echo "::set-output name=functions_run_job::true"
          echo "::set-output name=base_commit::asdf"

  pod-lib-lint-database:
    # Don't run on private repo unless it is a PR.
    if: github.repository == 'granluo/issue_generations' && github.event.pull_request.merged == true || github.repository == 'granluo/issue_generations' && needs.check.outputs.database_run_job == 'true'
    needs: check
    runs-on: macOS-latest
    strategy:
      matrix:
        target: [ios]
    steps:
    - uses: actions/checkout@v2
    - name: Build and test
      run: echo "database test"

  pod-lib-lint-functions:
    # Don't run on private repo unless it is a PR.
    if: github.repository == 'granluo/issue_generations' && (github.event.pull_request.merged == true || needs.check.outputs.functions_run_job == 'true')
    needs: check
    runs-on: macOS-latest
    strategy:
      matrix:
        target: [ios]
    steps:
    - uses: actions/checkout@v2
    - name: Build and test
      run: echo "functions test"

  create_report:
    needs: [check, pod-lib-lint-functions, pod-lib-lint-database]
    if: always()
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - name: Access to Metrics Service
        run: |
          # Install gcloud sdk
          echo "install gcloud"
          echo $GITHUB_EVENT_PATH
          cat $GITHUB_EVENT_PATH
          echo "----repo name-----------"
          echo ${{ github.repository }}
          echo "----merge-----------"
          echo ${{ github.event.pull_request.merged }}
          echo "----functions run-----------"
          echo ${{ needs.check.outputs.functions_run_job }}
      - name: Compare Diff and Post a Report
        if: github.event_name == 'pull_request'
        env:
          base_commit: ${{ needs.check.outputs.base_commit }}
        run: |
          echo "pull request."
      - name: Update New Coverage Data
        if: github.event.pull_request.merged == true
        run: |
          echo "merge"
