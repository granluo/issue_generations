name: test_issue_generation


on:
  pull_request:
    paths:
    - '.github/workflows/test.yml'
  schedule:
    # Run every day at 5am (PST) - cron uses UTC times
    - cron:  '0 13 * * *'

jobs:
  get_link:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Job Link
        run: |
          echo "https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          echo "https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> id_artifact.txt
      - uses: actions/upload-artifact@v2
        with: 
          name: job_log_link
          path: id_artifact.txt
  dummy_job:
    needs: get_link
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Job Link
        run: |
          echo "https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          echo $GITHUB_EVENT_PATH
          cat $GITHUB_EVENT_PATH
          echo "github event path"
      - uses: actions/download-artifact@v2
        with: 
          name: job_log_link
      - name: Add Link
        run: |
          echo -e "\nhttps://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> id_artifact.txt
      - uses: actions/upload-artifact@v2
        with: 
          name: job_log_link
          path: id_artifact.txt
      - name: run after each pr
        if: github.event_name == 'pull_request' && github.event.action == 'synchronize'
        run: |
          echo "the branch is here."
          echo "${{ github.head_ref }}"
          echo "${{ github.base_ref }}"
          echo "${{ github.ref }}"
          echo "the branch is here."
      - name: run when not merge
        if: github.event.pull_request.merged != true
        run: |
          echo "the branch is here."
          echo "${{ github.head_ref }}"
          echo "${{ github.base_ref }}"
          echo "${{ github.ref }}"
          echo "${GITHUB_REF##*/}"
          echo ${GITHUB_REF##*/}
          echo "see if it works."
          cat $GITHUB_EVENT_PATH
      - name: run after merge
        if: github.event.pull_request.merged == true
        run: |
          echo "the branch is here."
          echo "${{ github.head_ref }}"
          echo "====="
          echo "${GITHUB_SHA}"
          GITHUB_SHA=$(cat $GITHUB_EVENT_PATH | jq -r .pull_request.head.sha)
          echo "${GITHUB_SHA}"
          echo "====="
          echo "${{ github.base_ref }}"
          echo "${{ github.ref }}"
          echo "${GITHUB_REF##*/}"
          echo ${GITHUB_REF##*/}
          echo "see if it works."
          echo $(echo ${GITHUB_HEAD_REF})
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Print slug/short variables
        run: |
          echo "Slug variables"
          echo " - ${{ env.GITHUB_REF_SLUG }}"    
          echo " - ${{ env.GITHUB_HEAD_REF_SLUG }}"
          echo " - ${{ env.GITHUB_BASE_REF_SLUG }}"
          echo " - ${{ env.GITHUB_REPOSITORY_SLUG }}"
          # output e.g. : master feat-new-feature v1.0.0 product-1.0.0-rc.2 new-awesome-product
          echo "Slug URL variables"
          echo " - ${{ env.GITHUB_REF_SLUG_URL }}"
          echo " - ${{ env.GITHUB_HEAD_REF_SLUG_URL }}"
          echo " - ${{ env.GITHUB_BASE_REF_SLUG_URL }}"
          echo " - ${{ env.GITHUB_REPOSITORY_SLUG_URL }}"
          # output e.g. : master feat-new-feature v1-0-0 product-1-0-0-rc-2 new-awesome-product
          echo "Short SHA variables"
          echo " - ${{ env.GITHUB_SHA_SHORT }}"
